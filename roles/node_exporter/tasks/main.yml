---
- name: create user
  user:
    name: node_exporter
    comment: node_exporter daemon
    create_home: no
    system: yes
    shell: /usr/sbin/nologin
    state: present

- name: get node_exporter current version info
  command: node_exporter --version
  register: node_exporter_current
  changed_when: no
  failed_when: no

- name: get node_exporter latest version info
  uri:
    url: https://api.github.com/repos/prometheus/node_exporter/releases/latest
  register: node_exporter_latest
  failed_when: no

- name: extract node_exporter current and latest versions
  set_fact:
    node_exporter_latest: "{{ node_exporter_latest.json.tag_name|regex_search('^v([\\d\\.]+)$', '\\1') }}"
    node_exporter_current: "{{ node_exporter_current.stdout|regex_search('^node_exporter, version ([\\d\\.]+)', '\\1') }}"

- name: node_exporter is not installed
  set_fact:
    node_exporter_current: ['0']
  when: node_exporter_current|length == 0

- block:
  - name: download and extract
    unarchive:
      src: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_latest|first }}/node_exporter-{{ node_exporter_latest|first }}.linux-{{ ansible_architecture_mapped }}.tar.gz
      dest: /tmp
      mode: 0755
      remote_src: true

  - name: install binary
    copy:
      src: /tmp/node_exporter-{{ node_exporter_latest|first }}.linux-{{ ansible_architecture_mapped }}/node_exporter
      dest: /usr/bin
      mode: 0755
      remote_src: true
    notify: restart node_exporter

  - name: remove temporary directory
    file:
      path: /tmp/node_exporter-{{ node_exporter_latest|first }}.linux-{{ ansible_architecture_mapped }}
      state: absent
  when: node_exporter_latest is version(node_exporter_current, 'gt')

- name: systemd unit file
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: 0644
  notify: restart node_exporter

- name: enable and start service
  systemd:
    name: node_exporter
    state: started
    enabled: yes

- meta: flush_handlers
